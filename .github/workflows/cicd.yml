name: Тестирование и развёртывание проекта

on:
  #  в этом блоке указываем когда, при каких условиях процесс будет запускаться. триггер срабатывания
  push:
    #  запускается при пуше. можно настроить при пулл реквесте, форке и тд
    branches: [cicd]
    #  список веток для отслеживания, при пуше\..\ на какую\ие запускать действие

jobs:
  #  сами действия, которые необходимо запускать
  tests:
    #  в нашем примере тесты. имя от балды, просто по логике
    runs-on: ubuntu-20.04
      #  на какой системе эти действия запустить. в рег.ру эта ОС, поэтому ее и указываем
    env:
      #  переменные окружения, необходимые для тестов
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
        #  теоретически можно прописать здесь, но это говно ими светить, поэтому делаем через сикретс в гитхабе
        #  чешем в гит репозиторий задавать в сикретсах переменные окружения для тестирования
       #  через ${{ secrets.имя переменной в сикретах }} вытаскиваем переменные из сикретов
      DEBUG: "0"
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    services:
      #  нам нужен постгрес, чтобы создавать бд и гонять через нее тесты, поэтому указываем ее. Вообще,
      # если нужны сервисы, указываем их здесь. работает по принципу докера
      postgres_main:
        image: postgres
        env:
          #  вот здесь уже ключи фиксированные c именно такими названиями! Value можно любые, а можно из сикретов, пофигу
          POSTGRES_DB: ${{ env.DB_NAME }}
          #  если переменная нужна из глобального окружения, сиснтаксис ${{ env.ИМЯ переменной в окружении }}
          #  мы уже задавали ее ранее, поэтмоу берем из блока выше, обращаясь по заданному там имени через env.
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options:
          #  чтобы сервер не падал при запуске постгрес
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    steps:
      #  запускаем сами действия по проверке
      - name: Проверяем репозиторий на наличие изменений
        uses: actions/checkout@v3
         #  действия есть встроенные в гитхаб или написанные сторонними пользователями

      - name: Установка python и развертывание окружения в гит
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Установить зависимости
        run: pip install -r requirements.txt
        #  если используем не "готовое" действие из экшенс, пишем свою консольную команду через RUN

      - name: Линтинг
         #  линтеры проверяют код на соответствие правилам написания кода, пеп8 и тд
        run: flake8 --exclude=venv
        #  тут команда проверки, пример flake8 logistic/ --exclude=logistic/migrations

      - name:
        run: python manage.py test
        env:
          #  тестам тоже нужно своё окружение х_х. Вот здесь уже ключи как в сеттингах!!! Все названия из .энв
          #  значения можно из глобального энва, то что вытащили из сикретс ранее
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DEBUG: ${{ env.DEBUG }}
          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
